metadatasharing.title=Metadata Sharing
metadatasharing.type=Type
metadatasharing.name=Name
metadatasharing.field=Field
metadatasharing.openmrsVersion=OpenMRS version
metadatasharing.moduleVersion=Module version
metadatasharing.version=Package version
metadatasharing.status=Status
metadatasharing.unsubscribe=Unsubscribe
metadatasharing.subscribe=Subscribe
metadatasharing.description=Description
metadatasharing.uuid=UUID
metadatasharing.id=ID
metadatasharing.dateCreated=Creation Date
metadatasharing.dateExported=Date exported
metadatasharing.modificationDate=Modification Date
metadatasharing.download=Download
metadatasharing.remove=Remove
metadatasharing.delete=Delete
metadatasharing.save=Save
metadatasharing.add=Add
metadatasharing.or=or
metadatasharing.file=File
metadatasharing.file.packageZip=Package ZIP File
metadatasharing.url=URL
metadatasharing.packageUrl=Package URL
metadatasharing.youChoose=You chose
metadatasharing.include=Include
metadatasharing.import=Import
metadatasharing.specifyPackage=Specify package name and description
metadatasharing.items=Items
metadatasharing.needAssesment=Need Assessment
metadatasharing.createNew=Create new
metadatasharing.skipIfPossible=Skip If Possible
metadatasharing.keepMine=Keep Mine
metadatasharing.overwrite=Overwrite
metadatasharing.itemsLeft=There are {0} items left which need assessment.
metadatasharing.selectItemsToExport=Select items to export
metadatasharing.chooseMetadataToExport=Choose metadata to export
metadatasharing.addMore=Add More
metadatasharing.reviewPackage=Review package
metadatasharing.reviewChoice=Review selected items
metadatasharing.export=Export
metadatasharing.importPackage=Import package
metadatasharing.importPackage.notSubscribed=The package was successfully imported, but the subscription to the future package updates wasn't added
metadatasharing.importPackage.notImported=Package was not imported due to some validation errors. You need to fix either your existing data or choose other action for the metadata that caused the errors.
metadatasharing.addMetadataToPackage=Add metadata to package
metadatasharing.chooseMetadata=Choose metadata
metadatasharing.chooseType=Choose type
metadatasharing.cancel=Cancel
metadatasharing.choose=Choose
metadatasharing.choose.trustLevel=Choose trust level
metadatasharing.next=Next
metadatasharing.proceed=Proceed
metadatasharing.back=Back
metadatasharing.packageContent=Package content
metadatasharing.explicitContent=You are about to export {0} items
metadatasharing.implicitContent=To export the items you chose we also need to include {0} items they depend on.
metadatasharing.details=Details
metadatasharing.packageCreated=Package creation succeeded
metadatasharing.managePackages=Manage Metadata Packages
metadatasharing.exportMetadata=Export Metadata
metadatasharing.importMetadata=Import Metadata
metadatasharing.createPackage=Create package
metadatasharing.upload=Upload
metadatasharing.upload.zipped=Package ZIP File
metadatasharing.uploading=Uploading...
metadatasharing.import.acceptAll=Accept All and Import
metadatasharing.importing=Importing... (this may take a very long time)
metadatasharing.conceptSource.description.line1=To do this, your database needs a Concept Source to represent the internal ids of concepts in your database. This Concept Source must be unique to your server. If you do not have a suitable Concept Source, you need to create one in order to be able to export Concepts.
metadatasharing.conceptSource.description.line2=If you already have a Concept Source in your database that represents the internal conceptIds in your dictionary, choose it here:
metadatasharing.ifNot=If not
metadatasharing.configureImplementationId=configure implementation ID to create your Concept Source
metadatasharing.urlPrefix=URL prefix
metadatasharing.urlPrefix.description=Public URL prefix
metadatasharing.urlPrefix.description2=(required to publish packages, e.g. <i>http://yourdomain.org/openmrs</i>)
metadatasharing.notifyMe=Notify me about updates to packages I subscribe to (requires network access)
metadatasharing.checkUpdatesEvery=Check every 
metadatasharing.days=days
metadatasharing.publishPackage=Publish package
metadatasharing.publishPackage.description=Publish the package and include the URL in its content, so that others can automatically subscribe to future updates while importing the zipped package.
metadatasharing.confirmDelete=Are you sure that you want to delete item with id {0}?
metadatasharing.yes=Yes
metadatasharing.no=No
metadatasharing.chooseIndividually=Choose individually
metadatasharing.addAll=Add all
metadatasharing.addNonRetired=Add non-retired
metadatasharing.removeAll=Remove all
metadatasharing.review=Review
metadatasharing.reviewRelatedMetadata=Review related metadata
metadatasharing.chooseFileToImport=Choose file to import
metadatasharing.existing=Existing
metadatasharing.incoming=Incoming
metadatasharing.resolveConflicts=Resolve conflicts
metadatasharing.hasConflicts=The package contains {0} items that already exist in the system.
metadatasharing.overwriteExisting=Overwrite existing
metadatasharing.confirmImport=Confirm import
metadatasharing.aboutToImport=You are about to import {0} metadata items.
metadatasharing.packageImported=Package import succeeded
metadatasharing.packageDetails=Package details
metadatasharing.contents=Contents
metadatasharing.apply=Apply
metadatasharing.action=Action
metadatasharing.alreadyExists=already exists (will be updated if necessary)
metadatasharing.change=change
metadatasharing.chooseAction=Choose action
metadatasharing.importMethod.choose=Choose import method
metadatasharing.importMethod.manual=manual (will need to choose action for each item)
metadatasharing.importMethod.automatic=automatic (will only need to confirm items that have changed since the last import to be overwritten)
metadatasharing.checkForUpdates=Check for updates
metadatasharing.checkNow=Check now
metadatasharing.notPublished=not published
metadatasharing.published=Published
metadatasharing.publishedVersions=published versions
metadatasharing.package.old=This is an old package type and thus cannot be published
metadatasharing.showStackTrace=Show stack trace
metadatasharing.hideStackTrace=Hide stack trace
metadatasharing.connecting=Connecting to the remote server...
metadatasharing.downloading=Downloading package...
metadatasharing.alert.description=This is an alert created by Metadata Sharing Module after detecting packages updates. 
metadatasharing.alert.updatesAvailable=There are {0} Metadata Sharing packages with updates available. Check the module for more information.
metadatasharing.addInvalidSubscription.line1=There were some errors during downloading the package. This may be caused because of lack of the Internet connection or misspelled URL.
metadatasharing.addInvalidSubscription.line2=Do you want to add the subscription without importing the package?
metadatasharing.addLocalMappings=Add local concept mappings?
metadatasharing.addLocalMappings.description=Ensures that every concept you export has a mapping back to your local dictionary, and if not, tag that concept with its internal conceptId from your database. (This allows people to share concepts without central coordination, while still building up knowledge about concepts on different servers with identical meaning.)
metadatasharing.foundExistingConceptWithMatchingMapping.description=Found Concept with matching concept mapping
metadatasharing.preferredConceptSources=Concept sources whose mappings you trust:
metadatasharing.preferredConceptSources.description=When importing concepts, we can automatically merge any incoming concept that is "the same as" one of your existing concepts, based on a trusted concept reference source (e.g. SNOMED, MVP/CIEL).
metadatasharing.enableOnTheFlyPackages.description=Specifies whether metadata packages can be exported on the fly
metadatasharing.webservicesKey.description=Key to grant access to remote systems to consume module webservices RESTfully
metadatasharing.onTheFlyPackageConfiguration=On the fly Package Configuration
metadatasharing.enableOnTheFlyPackages=Enable on the fly packages?
metadatasharing.webservicesKey=Webservices key
metadatasharing.packageUpdates=Publish package
metadatasharing.packageUpdates.description=Publish the package and include the URL in its content, so that others can automatically subscribe to future updates while importing the zipped package.
metadatasharing.shareMetadata=Export Metadata
metadatasharing.manageSubscriptions=Import Metadata

metadatasharing.subscription.subscribe=Subscribe to the future updates of this package
metadatasharing.subscription.table=Packages subscriptions:
metadatasharing.subscription.name=Subscription
metadatasharing.subscription.added=Subscription added successfully
metadatasharing.subscription.url.enter=Package URL
metadatasharing.subscription.url.showEntire=Show entire URL
metadatasharing.subscription.status.neverChecked=Never checked
metadatasharing.subscription.status.upToDate=Up to date
metadatasharing.subscription.status.updateToVersion=Update to version
metadatasharing.subscription.status.available=available
metadatasharing.subscription.status.importText=Import
metadatasharing.subscription.status.timeout=Timeout limit exceeded
metadatasharing.subscription.status.invalidSubscription=Invalid subscription
metadatasharing.subscription.status.serviceUnavailable=Service unavailable
metadatasharing.subscription.status.duplicateSubscription=Duplicate subscription
metadatasharing.subscription.latestImportedVersion=latest imported version
metadatasharing.subscription.neverImported=never imported
metadatasharing.subscription.packageName=Package name
metadatasharing.subscription.areYouSure=Are you sure that you want to unsubscribe
metadatasharing.subscription.downloadPackage=Download package

metadatasharing.task.manageTasks=Manage Tasks
metadatasharing.task.taskDetails=Task details
metadatasharing.task.running=Running 
metadatasharing.task.failed=Failed
metadatasharing.task.completed=Completed
metadatasharing.task.export=Export
metadatasharing.task.import=Import

metadatasharing.packageSummary=Package Summary
metadatasharing.packageSummary.shareUrl=Share this URL with others to allow them to download the latest version of this package from this server
metadatasharing.packageSummary.newVersionLatest=Create new version from the latest version
metadatasharing.packageSummary.downloadLatest=Download the latest version
metadatasharing.packageSummary.newVersionScratch=Create new version starting from scratch
metadatasharing.packageSummary.packageVersions=Package versions:
metadatasharing.packageSummary.latestVersionNotPublished=The latest version is not published
metadatasharing.packageSummary.pleasePublish=Publish any version of the package to get the URL
metadatasharing.packageSummary.confirmDelete=Are you sure that you want to delete version
metadatasharing.packageSummary.unpublish=Unpublish
metadatasharing.packageSummary.publish=Publish
metadatasharing.packageSummary.newVersionThisOne=Create new package version starting from this one
metadatasharing.packageSummary.downloadZipped=Download the zipped package

metadatasharing.import.reviewPackage=Review Package
metadatasharing.import.summary=Import Summary
metadatasharing.import.startAssessing=Start Assessing
metadatasharing.import.mode.choose=Choose import mode
metadatasharing.import.mode.previous=Previous
metadatasharing.import.mode.previous.description=Resume a previous import that did not complete successfully, or import a new version of a package with the same settings you used for the last version.
metadatasharing.import.mode.parentAndChild=From Master
metadatasharing.import.mode.parentAndChild.description=Import a package from your implementation's master metadata server. This will trust the package to overwrite your existing metadata.
metadatasharing.import.mode.peerToPeer=From Peer
metadatasharing.import.mode.peerToPeer.description=Import a package from another implementation. This will trust your existing metadata more than what is included in the package.
metadatasharing.import.mode.test=Quick test
metadatasharing.import.mode.test.description=Import as quickly as possible without asking for confirmation. Use this to test a package on a development server before deciding whether to import it more carefully to a production server.
metadatasharing.import.mode.adjust=Adjust import mode
metadatasharing.import.parts=Parts
metadatasharing.import.loadNextPart=Load next part
metadatasharing.error.subscription.duplicate=You are already subscribed to the given url.
metadatasharing.error.package.file.empty=The file must not be empty.


metadatasharing.configure=Configure
metadatasharing.configure.required=Configure <b>*required*</b>
metadatasharing.configure.saved=Configuration saved successfully
metadatasharing.configure.urlPrefix.enter=The URL prefix is empty, thus you will not be able to publish packages
metadatasharing.configure.urlPrefix=You need to configure your server public URL before you can publish packages.
metadatasharing.configure.importing=Importing
metadatasharing.configure.exporting=Exporting
metadatasharing.configure.subscribing=Subscribing
metadatasharing.configure.publishing=Publishing

metadatasharing.error=Error
metadatasharing.error.editPackage=There were some errors during getting previous package items from the database.
metadatasharing.error.editPackage.missingClasses=Missing classes:
metadatasharing.error.editPackage.missingItems=Missing items:
metadatasharing.error.import=Error Importing Package
metadatasharing.error.import.suspected.missing.module=The package contains items from the following modules, which you are not running:
metadatasharing.error.import.suspected.missing.module.supports.classes=needed to support: {0}
metadatasharing.error.import.suspected.missing.module.try.again=Please try importing the package again after installing the missing module(s).
metadatasharing.error.import.missing.modules=(Extra information)<br/>The server that exported this package was running modules that are not running here. Some of them may be needed to import this package:
metadatasharing.error.import.full.error.message=The full error message is:
metadatasharing.error.package.notFound=Package not found.
metadatasharing.error.package.select=Please select the package file to upload.
metadatasharing.error.package.field.empty=This field can't be empty.
metadatasharing.error.package.invalidItems=Invalid items
metadatasharing.error.package.name.tooLong=Too long package name. It may consist of maximum {0} characters.
metadatasharing.error.package.description.tooLong=Too long package description. It may consist of maximum {0} characters.
metadatasharing.error.subscription.url.invalid=Invalid subscription URL
metadatasharing.error.subscription.url.unsupported=Only {0} protocols are supported.
metadatasharing.error.subscription.url.tooLong=Too long subscription URL. It may consist of maximum {0} characters.
metadatasharing.error.subscription.fatalError=Fatal error
metadatasharing.error.alert.invalidInterval=Invalid number of days.
metadatasharing.error.emptyConceptSource=Concept Source cannot be empty.
metadatasharing.error.urlPrefix.endsWithSlash=The URL prefix cannot end with slash. 
metadatasharing.error.urlPrefix.unknownProtocol=The URL prefix must begin with "http://" or "https://".
metadatasharing.error.conceptSource.notConfigured=You have not configured Concept Source yet. Go to the <a href="configure.form" target="_blank">Configure</a> page and set it there.
metadatasharing.error.package.modules.missingRequiredModule=The package cannot be imported unless {0} in the {1} or compatible version is installed and started.

metadatasharing.warning=warning
metadatasharing.warning.latestVersionNotPublished=The latest version is not published
metadatasharing.warning.package.version.old=You are about to import an old version of a package that was previously imported. This will not cause deletion of any metadata.
metadatasharing.warning.package.openmrsVersion.incompatible=Warning: This package was exported from a different OpenMRS version. Import may not be possible.
metadatasharing.warning.package.openmrsVersion.wrongFormat=Warning: Unrecognized version.
metadatasharing.warning.package.moduleVersion.different=Warning: This package was exported with a different version of the Metadata Sharing Module. It is recommended to use the same version.
metadatasharing.warning.lower.module.version=You are running a lower version of {0} than the creator of this package ({1} versus {2}). This may cause problems.
metadatasharing.warning.missing.module=To import this package you need to be running the {0} module. It contains: {1}.